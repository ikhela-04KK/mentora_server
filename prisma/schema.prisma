generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String
  role      UserRole   @default(INVITE)
  avatar    String
  createdAt DateTime?  @default(now()) @db.Timestamptz(6)
  statuses  Status[]   @relation("userStatus")
  messages  Messages[] @relation("userMessages")
  // Define the reference to Status table
}

enum UserRole {
  ADMIN
  INVITE
  TEACHER
  STUDENT
}

// Define the Status table
model Status {
  id            Int      @id @default(autoincrement())
  connect_at    DateTime
  disconnect_at DateTime
  user_id       Int
  // Define the reference to Users table
  user          User     @relation("userStatus", fields: [user_id], references: [id]) // duplicate
  // Error validating field `user` in model `Status`: The relation field `user` on model `Status` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.
}

// Define the Chats table
model Chats {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now())

  // Define the reference to Messages table
  Messages Messages[] @relation("chatMessages")
}

// Define the Messages table
model Messages {
  id           Int       @id @default(autoincrement())
  content      String
  seen_at      DateTime?
  delivered_at DateTime?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  user_id      Int
  chat_id      Int
  // Define the reference to Users table
  user         User      @relation("userMessages", fields: [user_id], references: [id]) //duplicate
  // Error validating field `user` in model `Status`: The relation field `user` on model `Status` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.
  // Define the reference to Chats table
  chat         Chats     @relation("chatMessages", fields: [chat_id], references: [id])
}
